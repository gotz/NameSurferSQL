/*
 * NamePanel.java
 *
 * Created on Oct 12, 2010, 7:59:23 PM
 */
package NameSurferSQL;

import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author nathan
 */
public class NamePanelSQL extends javax.swing.JPanel {

    private int id;
    private NameListSQL record;
    public ArrayList lines;

    /** Creates new form NamePanel */
    public NamePanelSQL() {
        initComponents();
        lines = new ArrayList();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void setID(int id) {
        if (id == 0) {
            this.id = 0;
        } else {
            this.id = id;
        }
    }

    private int checkZero(int rank) {
        if (rank == 0) {
            return 1000;
        } else {
            return rank;
        }
    }

    private int toPixelX(int year) {
        int pX = (year - 1900) * getWidth() / 110;
        return pX;
    }

    private int toPixelY(int value) {
        int pY = value * (getHeight() - 20) / 1000;
        return pY;

    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        int height = this.getHeight();
        int width = this.getWidth();

        /*
         * Draw the Grid
         */
        // The bottom line
        g.drawLine(0, height - 20, width, height - 20);

        //Draw all of the lines and year
        for (int i = 0; i <= 100; i += 10) {
            int decade = 1900 + i;

            //don't draw a line for 1900 as it's "line" is the window border
            if (decade != 1900) {
                g.drawLine(toPixelX(decade), 0, toPixelX(decade), height);
            }
            g.drawString("" + decade, toPixelX(decade), height - 9);
        }


        /*
         * Draw the Graph for the names popularity
         */

        Color[] color = {Color.BLUE, Color.GREEN, Color.magenta, Color.ORANGE};

        if (!lines.isEmpty()) {
            for (int i = 0; i < lines.size() && i < 4; i++) {
                try {
                    record = new NameListSQL();
                    id = record.search(lines.get(i) + "");

                    for (int j = 0; j < 10; j++) {
                        int decade = 1900 + (j * 10);
                        int x1 = toPixelX(decade);
                        int x2 = toPixelX(decade + 10);
                        int y1 = toPixelY(checkZero(record.getRank(id, j)));
                        int y2 = toPixelY(checkZero(record.getRank(id, j + 1)));
                        g.setColor(color[i]);
                        if (record.getRank(id, j) != 0) {
                            g.drawString("" + record.getRank(id, j), x1 + 11, y1 + 11);
                        }
                        g.drawString(record.getName(id), toPixelX(10), toPixelY(i));
                        g.drawLine(x1, y1, x2, y2);
                    }
                    g.drawString("" + record.getRank(id, 10), toPixelX(2000),
                            toPixelY(checkZero(record.getRank(id, 10))));

                    g.drawString(record.getName(id), toPixelX(2000) - 10, toPixelY(500 + (i * 50)));

                } catch (Exception ex) {
                    Logger.getLogger(NamePanelSQL.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
